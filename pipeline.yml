---
jobs:
- name: build-docker-image
  public: true
  serial: true
  plan:
  - get: git-repo
    trigger: true
  - put: datetime-version
  - put: docker-image
    params:
      build: git-repo
      tag_file: datetime-version/version
  - task: make-a-file
    config:
      platform: linux
      inputs:
      - name: datetime-version
      image_resource:
        type: registry-image
        source: { repository: busybox }
      params:
        version: datetime-version/version
      run:
        path: sh
        args:
        - -exc
        - ls -la; cat $version
      outputs:
        - name: files

- name: update-deployment
  plan:
  - get: git-repo
    trigger: true
    passed:
      - build-docker-image
  - task: make-a-file
    config:
      platform: linux
      inputs:
      - name: datetime-version
      image_resource:
        type: registry-image
        source: 
          repository: alpine/k8s 
          tag: 1.14.9
      params:
        version: datetime-version/version
        kube_api_server_uri: ((credentials.kube_api_server_uri))
        kube_api_token: ((credentials.kube_api_token))
      run:
        path: /bin/sh
        args:
        - -c
        - |
          image_version=$(cat $version)
          sed -i 's/image_version/${image_version}/g' git-repo/k8s/deploy.yaml
          sed -i 's/kube_api_server_uri/${kube_api_server_uri}/g' git-repo/k8s/kubeconfig.yaml
          sed -i 's/kube_api_token/${kube_api_token}/g' git-repo/k8s/kubeconfig.yaml
          mkdir -p ~/.kube
          cp git-repo/k8s/kubeconfig.yaml ~/.kube/config
          kubectl apply -f git-repo/k8s/deploy.yaml
      outputs:
        - name: files

resource_types:
- name: datetime-version
  type: registry-image
  source:
    repository: dcsg/datetime-version-resource

resources:
- name: datetime-version
  type: datetime-version
  source:
    timezone: 'Europe/Lisbon' # default is 'UTC'
    format: '20060102.150405' # default is '20060102-150405'

- name: git-repo
  type: git
  source:
    uri: https://github.tools.sap/I500506/innoweek-ops-bot.git
    branch: master
    private_key: null
    skip_ssl_verification: true
    password: ((credentials.landscape_git_password))
    username: ((credentials.landscape_git_user))

- name: docker-image
  type: docker-image
  source:
    email: ((credentials.docker_email))
    username: ((credentials.docker_user))
    password: ((credentials.docker_password))
    repository: anaikdocker/slackbot